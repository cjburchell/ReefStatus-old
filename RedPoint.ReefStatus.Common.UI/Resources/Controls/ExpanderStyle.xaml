<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Controls="clr-namespace:RedPoint.ReefStatus.Common.UI.Controls" 
    xmlns:Helpers="clr-namespace:RedPoint.ReefStatus.Common.UI.Controls.Helpers" mc:Ignorable="d">

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                         CornerRadius="{TemplateBinding Helpers:ThemeHelper.CornerRadius}" 
                         BorderBrush="{TemplateBinding BorderBrush}" 
                         BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Row="0" Height="24" Width="24">
                                <Controls:Arrow Direction="Right" Margin="5" x:Name="Arrow"/>
                            </Viewbox>
                            <ContentPresenter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Direction" TargetName="Arrow" Value="Left"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                         CornerRadius="{TemplateBinding Helpers:ThemeHelper.CornerRadius}" 
                         BorderBrush="{TemplateBinding BorderBrush}" 
                         BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="1" Height="24" Width="24">
                                <Controls:Arrow Direction="Up" Margin="5" x:Name="Arrow"/>
                            </Viewbox>
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Direction" TargetName="Arrow" Value="Down"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                         CornerRadius="{TemplateBinding Helpers:ThemeHelper.CornerRadius}" 
                         BorderBrush="{TemplateBinding BorderBrush}" 
                         BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Row="0" Height="24" Width="24">
                                <Controls:Arrow Direction="Left" Margin="5" x:Name="Arrow"/>
                            </Viewbox>
                            <ContentPresenter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Direction" TargetName="Arrow" Value="Right"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                         CornerRadius="{TemplateBinding Helpers:ThemeHelper.CornerRadius}" 
                         BorderBrush="{TemplateBinding BorderBrush}" 
                         BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="1" Height="24" Width="24">
                                <Controls:Arrow Direction="Down" Margin="5" x:Name="Arrow"/>
                            </Viewbox>
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Direction" TargetName="Arrow" Value="Up"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ThemeBaseForgroundLevel2}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="MinHeight" Value="{DynamicResource TouchScreenItemSize}"/>
        <Setter Property="Padding" Value="2,0,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <Controls:ThemeBorder 
                        Style="{DynamicResource NoHoverThemeLevelStyle}"
                        BackgroundThemeLevel="{DynamicResource ThemeColor10}" 
                        DockPanel.Dock="Top" 
                        x:Name="HeaderSiteGrid">
                            <ToggleButton Background="Transparent" 
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                  x:Name="HeaderSite" 
                                                  MinHeight="0" 
                                                  MinWidth="0" 
                                                  Style="{StaticResource ExpanderDownHeaderStyle}" 
                                                  Content="{TemplateBinding Header}" 
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                                  FontFamily="{TemplateBinding FontFamily}" 
                                                  FontSize="{TemplateBinding FontSize}" 
                                                  FontStretch="{TemplateBinding FontStretch}" 
                                                  FontStyle="{TemplateBinding FontStyle}" 
                                                  FontWeight="{TemplateBinding FontWeight}" 
                                                  Foreground="{TemplateBinding Foreground}" 
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  IsChecked="{Binding IsExpanded, 
                                                  Mode=TwoWay, 
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                  Helpers:ThemeHelper.CornerRadius="{TemplateBinding Helpers:ThemeHelper.CornerRadius}"/>
                        </Controls:ThemeBorder>

                        <Controls:ThemeBorder 
                            Style="{DynamicResource NoHoverThemeLevelStyle}"
                            BackgroundThemeLevel="{DynamicResource ThemeColor10}" 
                            Visibility="Visible" DockPanel.Dock="Bottom"
                            BorderThickness="1,0,1,1"
                            x:Name="ExpandSite" CornerRadius="0,0,2,2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" />
                            <Controls:ThemeBorder.LayoutTransform>
                                <ScaleTransform ScaleX="1" ScaleY="0"/>
                            </Controls:ThemeBorder.LayoutTransform>
                        </Controls:ThemeBorder>
                    </DockPanel>
                    <ControlTemplate.Triggers>                   
                        <Trigger Property="IsExpanded" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1" To="0" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSiteGrid" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSiteGrid" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSiteGrid" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true"/>
                                <Condition Property="ExpandDirection" Value="Down"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="CornerRadius" TargetName="ExpandSite" Value="0,0,2,2"/>
                            <Setter Property="CornerRadius" TargetName="HeaderSiteGrid" Value="2,2,0,0"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="HeaderSiteGrid" Value="1,1,1,0"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true"/>
                                <Condition Property="ExpandDirection" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="CornerRadius" TargetName="HeaderSiteGrid" Value="2,0,0,2"/>
                            <Setter Property="CornerRadius" TargetName="ExpandSite" Value="0,2,2,0"/>
                            <Setter Property="BorderThickness" TargetName="HeaderSiteGrid" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="0,1,1,1"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true"/>
                                <Condition Property="ExpandDirection" Value="Up"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="CornerRadius" TargetName="HeaderSiteGrid" Value="0,0,2,2"/>
                            <Setter Property="CornerRadius" TargetName="ExpandSite" Value="2,2,0,0"/>
                            <Setter Property="BorderThickness" TargetName="HeaderSiteGrid" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="1,1,1,0"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true"/>
                                <Condition Property="ExpandDirection" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="CornerRadius" TargetName="HeaderSiteGrid" Value="0,2,2,0"/>
                            <Setter Property="CornerRadius" TargetName="ExpandSite" Value="2,0,0,2"/>
                            <Setter Property="BorderThickness" TargetName="HeaderSiteGrid" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="ExpandSite" Value="1,1,0,1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="False" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Grid.Column="0" Height="16" Width="16">
                            <Grid Margin="5">
                                <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="{DynamicResource ThemeBaseColorBrush}" Stroke="{DynamicResource ThemeBaseColorBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="ExpandPathChrome" Data="M0,0 L0,6 L6,0 z" Fill="{DynamicResource ThemeColor1}" Stroke="{DynamicResource ThemeColor1}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Viewbox>

                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="ExpandPathChrome">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource DefaultExpanderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" x:Name="HeaderSiteGrid">
                            <ToggleButton Background="Transparent" 
                                                  x:Name="HeaderSite" 
                                                  MinHeight="0" 
                                                  MinWidth="0" 
                                                  Style="{StaticResource FlatExpanderDownHeaderStyle}" 
                                                  Content="{TemplateBinding Header}" 
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                                  FontFamily="{TemplateBinding FontFamily}" 
                                                  FontSize="{TemplateBinding FontSize}" 
                                                  FontStretch="{TemplateBinding FontStretch}" 
                                                  FontStyle="{TemplateBinding FontStyle}" 
                                                  FontWeight="{TemplateBinding FontWeight}" 
                                                  Foreground="{TemplateBinding Foreground}" 
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  IsChecked="{Binding IsExpanded, 
                                                  Mode=TwoWay, 
                                                  RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>

                        <Border
                            Visibility="Collapsed" 
                            DockPanel.Dock="Bottom"
                            x:Name="ExpandSite">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,0,2,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}"/>
</ResourceDictionary>