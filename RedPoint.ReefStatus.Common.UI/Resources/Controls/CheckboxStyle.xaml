<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Controls="clr-namespace:RedPoint.ReefStatus.Common.UI.Controls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="3,3,0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator  Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Controls:ThemeBorder x:Name="chrome" Style="{DynamicResource ControlThemeBorderStyle}" Height="15" Width="15" IsHighlighted="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}">
                                <Image Height="11" Width="11" x:Name="check" />
                            </Controls:ThemeBorder>
                        </BulletDecorator.Bullet>
                        <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" Value="{DynamicResource DarkCheck}" TargetName="check"/>
                        </Trigger>

                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="5,0,0,0"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="{x:Type CheckBox}" />

	<Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="90"/>
		<Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultFontSize3}"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnChecking">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="42"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="OnUnchecking">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
								<SplineThicknessKeyFrame KeyTime="00:00:00.1000000" Value="1,1,1,1"/>
							</ThicknessAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>


                    <Controls:ThemeBorder x:Name="chrome" Style="{DynamicResource NoHoverThemeLevelStyle}" BorderThickness="{TemplateBinding BorderThickness}" BackgroundThemeLevel="{DynamicResource ThemeColor12}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<TextBlock Grid.Column="1" Text="{DynamicResource strOff}" FontWeight="Bold" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,1,3,1"/>
						<TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Text="{DynamicResource strOn}" Margin="3,1,3,1"/>
						<Controls:ThemeBorder  IsHighlighted="{TemplateBinding IsMouseOver}" 
                                               IsPressed="{TemplateBinding IsPressed}" 
                                               Style="{DynamicResource ControlThemeBorderStyle}" 
                                               Grid.ColumnSpan="2" HorizontalAlignment="Left"
                                               x:Name="slider" Width="44" RenderTransformOrigin="0.5,0.5" Margin="1,1,1,1">
							<Controls:ThemeBorder.RenderTransform>
                                                                                    <TransformGroup>
                                                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                                                            <RotateTransform Angle="0"/>
                                                                                            <TranslateTransform X="0" Y="0"/>
                                                                                    </TransformGroup>
                                                                            </Controls:ThemeBorder.RenderTransform>
						</Controls:ThemeBorder>
					</Grid>
                    </Controls:ThemeBorder>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>