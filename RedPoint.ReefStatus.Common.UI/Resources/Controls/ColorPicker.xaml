<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" 
                    xmlns:Controls="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" 
                    xmlns:Controls1="clr-namespace:RedPoint.ReefStatus.Common.UI.Controls" 
                    xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended" xmlns:Converters="clr-namespace:Microsoft.Windows.Controls.Core.Converters;assembly=WPFToolkit.Extended">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TextButtonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultColorPickerStyle" TargetType="{x:Type extToolkit:ColorPicker}">
        <Setter Property="ButtonStyle" Value="{DynamicResource ColorPickerToggleButtonStyle}" />
        <Setter Property="Height" Value="24"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="MaxWidth" Value="60"/>
        <Setter Property="MinHeight" Value="{DynamicResource TouchScreenItemSize}"/>
        <Setter Property="ShowRecentColors" Value="True"/>
        <Setter Property="StandardColorsHeader" Value="{DynamicResource strColorPickerDerivedColorPalettesCaption}"/>
        <Setter Property="RecentColorsHeader" Value="{DynamicResource strColorPickerRecentColorPaletteCaption}"/>
        <Setter Property="AvailableColorsHeader" Value="{DynamicResource strColorPickerCurrentPaletteCaption}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template" Value="{DynamicResource ColorPickerControlTemplate}"/>
    </Style>

    <Style TargetType="{x:Type Controls:ColorPicker}" BasedOn="{StaticResource DefaultColorPickerStyle}"/>


    <Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <Controls1:ThemeBorder Style="{DynamicResource NoHoverThemeLevelStyle}" BackgroundThemeLevel="{DynamicResource ThemeColor13}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <Controls1:ThemeBorder x:Name="ToggleButtonChrome" Style="{DynamicResource ControlThemeBorderStyle}" Grid.Column="1"
                                         IsHighlighted="{TemplateBinding IsMouseOver}" 
                                         IsChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Controls:ColorPicker}}" 
                                         IsPressed="{TemplateBinding IsPressed}" 
                                         IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Controls:ColorPicker}}"
                                         Margin="2"
                                         >
                                    <Viewbox>
                                        <Controls1:Arrow x:Name="arrow" Direction="Down" Margin="5"/>
                                    </Viewbox>
                                </Controls1:ThemeBorder>
                            </Grid>
                        </Controls1:ThemeBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DrawingBrush  x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="ColorDisplayStyle" TargetType="Border">
        <Style.Resources>
            <Converters:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />
        </Style.Resources>
        <Setter Property="Background" Value="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
                <Setter Property="Background" Value="{DynamicResource CheckerBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <DataTemplate.Resources>
            <Converters:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />
        </DataTemplate.Resources>
        <Grid>
            <Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2,2,2,2" >
                <Rectangle Width="14" Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Name}" Value="Transparent">
                                    <Setter Property="Fill" Value="{DynamicResource CheckerBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border BorderThickness="1" Background="Transparent" BorderBrush="Transparent" x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorListStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="200" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ColorItemContainerStyle}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource ColorItemTemplate}" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <ControlTemplate x:Key="ColorPickerControlTemplate" TargetType="{x:Type Controls:ColorPicker}">
        <ControlTemplate.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ControlTemplate.Resources>
        <Grid>
            <ToggleButton x:Name="PART_ColorPickerToggleButton" IsTabStop="True" MinHeight="22" 
                                      Background="{TemplateBinding Background}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      
                                      Style="{TemplateBinding ButtonStyle}">
                <Grid Margin="2">
                    <Border x:Name="ColorOnly" Style="{DynamicResource ColorDisplayStyle}"/>

                    <Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
                        <StackPanel Orientation="Horizontal">
                            <Border HorizontalAlignment="Left" Width="20" Margin="2,1,4,1" Style="{StaticResource ColorDisplayStyle}" BorderThickness="1" BorderBrush="#FFC9CACA" />
                            <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                </Grid>
            </ToggleButton>

            <Popup x:Name="PART_ColorPickerPalettePopup"  VerticalAlignment="Bottom" IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True" Focusable="False"  HorizontalOffset="1" VerticalOffset="1" PopupAnimation="Fade"  >
                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="{DynamicResource DropShadowColor}" Margin="{DynamicResource DropShadowOffset}">
                    <Controls1:ThemeBorder x:Name="PopupContainer" CornerRadius="2"
                                Style="{DynamicResource NoHoverThemeLevelStyle}"
                                BackgroundThemeLevel="{DynamicResource ThemeColor13}" Padding="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid x:Name="_gridStandardColorsHost" Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!-- Available Colors -->
                                <Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{TemplateBinding AvailableColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,0,0,1" />
                                        <ListBox x:Name="PART_AvailableColors" Grid.Row="1"
                                                         ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Style="{DynamicResource ColorListStyle}" />
                                    </Grid>
                                </Grid>

                                <!-- Standard Colors-->
                                <Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{TemplateBinding StandardColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1"/>
                                        <ListBox x:Name="PART_StandardColors" Grid.Row="1"
                                                         ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"                                                      
                                                         Style="{DynamicResource ColorListStyle}" />
                                    </Grid>
                                </Grid>

                                <!-- Recent Colors-->
                                <Grid Grid.Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{TemplateBinding RecentColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1"/>
                                        <ListBox x:Name="PART_RecentColors" Grid.Row="1"
                                                         ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Style="{DynamicResource ColorListStyle}" />
                                    </Grid>
                                </Grid>
                            </Grid>

                            <!-- ColorCanvas -->
                            <Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
                                <Controls:ColorCanvas x:Name="PART_ColorCanvas" Background="Transparent" BorderThickness="0"
                                                           SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>

                            <Separator Grid.Row="1" HorizontalAlignment="Stretch" Margin="5,0,5,0" />

                            <!-- More Colors Button -->
                            <ToggleButton x:Name="_colorMode" Grid.Row="2" Content="{DynamicResource strColorPickerAdvancedButtonCaption}" Margin="5" Visibility="{TemplateBinding ShowAdvancedButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Controls1:ThemeBorder>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="DisplayColorAndName" Value="True">
                <Setter TargetName="ColorOnly" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ColorAndName" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger SourceName="_colorMode" Property="IsChecked" Value="True">
                <Setter TargetName="_colorMode" Property="Content" Value="Standard" />
                <Setter TargetName="_colorCanvasHost" Property="Visibility" Value="Visible" />
                <Setter TargetName="_gridStandardColorsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>